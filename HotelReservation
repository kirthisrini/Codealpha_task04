import java.util.Scanner;
class Room {
    int roomNumber;
    String roomType;
    double pricePerNight;
    boolean isBooked;
    Room(int roomNumber, String roomType, double pricePerNight) {
        this.roomNumber = roomNumber;
        this.roomType = roomType;
        this.pricePerNight = pricePerNight;
        this.isBooked = false;
    }
    public String toString() {
        return "Room " + roomNumber + " (" + roomType + ") - $" + pricePerNight + " per night - " + (isBooked ? "Booked" : "Available");
    }
}
class Reservation {
    String guestName;
    Room room;
    int nights;
    double totalCost;
    Reservation(String guestName, Room room, int nights) {
        this.guestName = guestName;
        this.room = room;
        this.nights = nights;
        this.totalCost = room.pricePerNight * nights;
        room.isBooked = true;
    }
    public String toString() {
        return "Reservation for " + guestName + ": " + room.roomType + " Room " + room.roomNumber + " for " + nights + " nights. Total: $" + totalCost;
    }
}
public class HotelReservation {
    static Room[] rooms = new Room[5];
    static Reservation[] reservations = new Reservation[5];
    static int reservationCount = 0;
    public static void main(String[] args) {
        initializeRooms();
        Scanner scanner = new Scanner(System.in);
        int choice;
        do {
            System.out.println("\nHotel Reservation System");
            System.out.println("1. View available rooms");
            System.out.println("2. Book a room");
            System.out.println("3. View reservations");
            System.out.println("4. Exit");
            System.out.print("Enter your choice: ");
            choice = scanner.nextInt();
            switch (choice) {
                case 1:
                    viewAvailableRooms();
                    break;
                case 2:
                    bookRoom(scanner);
                    break;
                case 3:
                    viewReservations();
                    break;
                case 4:
                    System.out.println("Exiting the system.");
                    break;
                default:
                    System.out.println("Invalid choice, please try again.");
            }
        }
        while (choice != 4);
        scanner.close();
    }
    static void initializeRooms() {
        rooms[0] = new Room(101, "Single", 1000);
        rooms[1] = new Room(102, "Double", 1500);
        rooms[2] = new Room(103, "Suite", 2000);
        rooms[3] = new Room(104, "Deluxe", 2500);
        rooms[4] = new Room(105, "Presidential", 3000);
    }
    static void viewAvailableRooms() {
        System.out.println("\nAvailable Rooms:");
        for (Room room : rooms) {
            if (!room.isBooked) {
                System.out.println(room);
            }
        }
    }
    static void bookRoom(Scanner scanner) {
        System.out.print("\nEnter guest name: ");
        scanner.nextLine();  // Consume newline
        String guestName = scanner.nextLine();
        viewAvailableRooms();
        System.out.print("Enter the room number you want to book: ");
        int roomNumber = scanner.nextInt();
        Room selectedRoom = null;
        for (Room room : rooms) {
            if (room.roomNumber == roomNumber && !room.isBooked) {
                selectedRoom = room;
                break;
            }
        }
        if (selectedRoom == null) {
            System.out.println("Invalid room number or room is already booked.");
            return;
        }
        System.out.print("Enter the number of nights: ");
        int nights = scanner.nextInt();
        Reservation reservation = new Reservation(guestName, selectedRoom, nights);
        reservations[reservationCount++] = reservation;
        System.out.println("Booking successful!");
        System.out.println(reservation);
        processPayment(scanner, reservation.totalCost);
    }
    static void processPayment(Scanner scanner, double amount) {
        System.out.print("Enter payment amount: ");
        double payment = scanner.nextDouble();
        if (payment < amount) {
            System.out.println("Insufficient payment. Please try again.");
            processPayment(scanner, amount);
        }
        else
        {
            double change = payment - amount;
            System.out.println("Payment successful! Change: $" + change);
        }
    }
    static void viewReservations() {
        if (reservationCount == 0) {
            System.out.println("No reservations found.");
            return;
        }
        System.out.println("\nReservations:");
        for (int i = 0; i < reservationCount; i++) {
            System.out.println(reservations[i]);
        }
    }
}
